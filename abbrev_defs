;;-*-coding: utf-8;-*-
(define-abbrev-table 'cperl-mode-abbrev-table
  '(
    ("=head1" "=head1" cperl-electric-pod :count 0)
    ("=head2" "=head2" cperl-electric-pod :count 0)
    ("=over" "=over" cperl-electric-pod :count 0)
    ("=pod" "=pod" cperl-electric-pod :count 0)
    ("continue" "continue" cperl-electric-else :count 0)
    ("do" "do" cperl-electric-keyword :count 0)
    ("else" "else" cperl-electric-else :count 0)
    ("elsif" "elsif" cperl-electric-keyword :count 0)
    ("for" "for" cperl-electric-keyword :count 0)
    ("foreach" "foreach" cperl-electric-keyword :count 0)
    ("foreachmy" "foreachmy" cperl-electric-keyword :count 0)
    ("formy" "formy" cperl-electric-keyword :count 0)
    ("head1" "head1" cperl-electric-pod :count 3)
    ("head2" "head2" cperl-electric-pod :count 0)
    ("if" "if" cperl-electric-keyword :count 0)
    ("over" "over" cperl-electric-pod :count 0)
    ("pod" "pod" cperl-electric-pod :count 1)
    ("unless" "unless" cperl-electric-keyword :count 0)
    ("until" "until" cperl-electric-keyword :count 0)
    ("while" "while" cperl-electric-keyword :count 0)
   ))

(define-abbrev-table 'emacs-lisp-mode-abbrev-table
  '(
    ("ef" "(defun my/ ()
\"\"
(interactive)
)" nil :count 5)
   ))

(define-abbrev-table 'global-abbrev-table
  '(
    ("8ar" "→" nil :count 7)
    ("8at" "@" nil :count 1)
    ("8deg" "°" nil :count 1)
    ("8ell" "…" nil :count 0)
    ("8et" "&" nil :count 0)
    ("8eur" "€" nil :count 54)
    ("8fem" "♀" nil :count 54)
    ("8mal" "♂" nil :count 1)
    ("8mic" "µ" nil :count 1)
    ("8oc" "°C" nil :count 1)
    ("8pound" "£" nil :count 2)
    ("8zws" "​" nil :count 4)
    ("Flase" "False" nil :count 4)
    ("Heikkil" "Heikki Lehväslaiho" nil :count 1)
    ("abiquity" "ambiguity" nil :count 0)
    ("absorbtion" "absorption" nil :count 0)
    ("adn" "and" nil :count 0)
    ("afaik" "as far as i know" nil :count 0)
    ("ahve" "have" nil :count 0)
    ("albait" "albeit" nil :count 0)
    ("anf" "and" nil :count 0)
    ("ang" "Å" nil :count 0)
    ("apr" "Apr." nil :count 0)
    ("april" "April" nil :count 0)
    ("arent" "are not" nil :count 0)
    ("assosiation" "association" nil :count 0)
    ("atm" "at the moment" nil :count 0)
    ("aug" "Aug." nil :count 0)
    ("august" "August" nil :count 0)
    ("availble" "available" nil :count 2)
    ("beacuse" "because" nil :count 0)
    ("behavious" "behaviors" nil :count 0)
    ("btw" "by the way" nil :count 0)
    ("cant" "can not" nil :count 0)
    ("ccc" "°C" nil :count 11)
    ("centences" "sentences" nil :count 0)
    ("cnt" "can't" nil :count 0)
    ("collaeque" "colleague" nil :count 0)
    ("colse" "close" nil :count 0)
    ("computationla" "computational" nil :count 0)
    ("consice" "concise" nil :count 1)
    ("consistant" "consistent" nil :count 0)
    ("couldnt" "could not" nil :count 0)
    ("daugher" "daughter" nil :count 0)
    ("ddnt" "didn't" nil :count 0)
    ("dec" "Dec." nil :count 0)
    ("december" "December" nil :count 0)
    ("degc" "°C" nil :count 0)
    ("degf" "°F" nil :count 0)
    ("dfb" "difference between" nil :count 0)
    ("didnt" "did not" nil :count 0)
    ("dnt" "don't" nil :count 0)
    ("doesnt" "does not" nil :count 0)
    ("dont" "do not" nil :count 0)
    ("dsnt" "doesn't" nil :count 0)
    ("dvp" "develop" nil :count 0)
    ("ef" "(defun my/ ()
\"\"
(interactive)
)" nil :count 1)
    ("eg" "e.g." nil :count 0)
    ("ex" "For example," nil :count 0)
    ("excamples" "examples" nil :count 0)
    ("explicite" "explicit" nil :count 0)
    ("explicitely" "explicitly" nil :count 1)
    ("feb" "Feb." nil :count 0)
    ("february" "February" nil :count 0)
    ("flase" "false" nil :count 4)
    ("fo" "of" nil :count 2)
    ("forthnight" "fortnight" nil :count 0)
    ("fri" "Fri." nil :count 0)
    ("friday" "Friday" nil :count 0)
    ("hadnt" "had not" nil :count 0)
    ("hasnt" "has not" nil :count 0)
    ("havent" "haven't" nil :count 0)
    ("hayday" "heyday" nil :count 0)
    ("heikkil" "Heikki Lehväslaiho" nil :count 6)
    ("hnt" "haven't" nil :count 0)
    ("htat" "that" nil :count 0)
    ("hte" "the" nil :count 0)
    ("htem" "them" nil :count 0)
    ("hwat" "what" nil :count 0)
    ("ill" "I'll" nil :count 0)
    ("im" "I am" nil :count 0)
    ("india" "India" nil :count 7)
    ("inlcuding" "including" nil :count 0)
    ("interective" "interactive" nil :count 0)
    ("isnt" "is not" nil :count 0)
    ("ive" "I've" nil :count 0)
    ("iwth" "with" nil :count 0)
    ("jan" "Jan." nil :count 0)
    ("january" "January" nil :count 0)
    ("jul" "Jul." nil :count 0)
    ("july" "July" nil :count 0)
    ("jun" "Jun." nil :count 0)
    ("june" "June" nil :count 0)
    ("lang" "language" nil :count 0)
    ("langs" "languages" nil :count 0)
    ("latex" "LaTeX" nil :count 5)
    ("lauched" "launched" nil :count 0)
    ("legnht" "length" nil :count 1)
    ("legnth" "length" nil :count 1)
    ("legth" "length" nil :count 1)
    ("lenght" "length" nil :count 3)
    ("lenth" "length" nil :count 1)
    ("lets" "let's" nil :count 0)
    ("ma" "am" nil :count 4)
    ("mammalial" "mammalian" nil :count 0)
    ("mar" "Mar." nil :count 0)
    ("march" "March" nil :count 0)
    ("matias" "Matias" nil :count 7)
    ("minna" "Minna" nil :count 19)
    ("mon" "Mon." nil :count 0)
    ("monday" "Monday" nil :count 0)
    ("nad" "and" nil :count 0)
    ("negigable" "negligible" nil :count 0)
    ("norskov" "Nørskov" nil :count 0)
    ("nov" "Nov." nil :count 0)
    ("november" "November" nil :count 0)
    ("nto" "not" nil :count 0)
    ("oC" "°C" nil :count 0)
    ("occatinally" "occasionally" nil :count 0)
    ("oct" "Oct." nil :count 0)
    ("october" "October" nil :count 0)
    ("otehr" "other" nil :count 3)
    ("otime" "Time-stamp: \" \"" nil :count 0)
    ("otimestamp" "Time-stamp: \" \"" nil :count 0)
    ("precice" "precise" nil :count 0)
    ("provenanace" "provenance" nil :count 0)
    ("recepi" "recipe" nil :count 1)
    ("recepies" "recipes" nil :count 1)
    ("recepis" "recipes" nil :count 1)
    ("reciliant" "resilient" nil :count 0)
    ("reguire" "require" nil :count 1)
    ("revieled" "revealed" nil :count 0)
    ("rigourous" "rigorous" nil :count 0)
    ("sat" "Sat." nil :count 0)
    ("saturday" "Saturday" nil :count 0)
    ("scholary" "scholarly" nil :count 0)
    ("schrodinger" "Schrödinger" nil :count 0)
    ("sentance" "sentence" nil :count 3)
    ("sept" "Sept." nil :count 0)
    ("september" "September" nil :count 0)
    ("shnt" "shouldn't" nil :count 0)
    ("shouldnt" "should not" nil :count 0)
    ("sparce" "sparse" nil :count 0)
    ("specialised" "specialized" nil :count 0)
    ("sperl" "#!/usr/bin/env LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 perl
use Modern::Perl;
use Data::Printer;
" nil :count 16)
    ("strenghten" "strengthen" nil :count 0)
    ("sun" "Sun." nil :count 0)
    ("sunday" "Sunday" nil :count 0)
    ("taht" "that" nil :count 15)
    ("techinques" "techniques" nil :count 0)
    ("teh" "the" nil :count 3)
    ("tehm" "them" nil :count 0)
    ("thats" "that is" nil :count 0)
    ("thur" "Thur." nil :count 0)
    ("thursday" "Thursday" nil :count 0)
    ("tm" "™" nil :count 0)
    ("tue" "Tue." nil :count 0)
    ("tuesday" "Tuesday" nil :count 0)
    ("ty" "thank you" nil :count 0)
    ("uutf8" "-*- coding: utf-8 -*-" nil :count 0)
    ("waht" "what" nil :count 0)
    ("wasnt" "was not" nil :count 0)
    ("wed" "Wed." nil :count 0)
    ("wednesday" "Wednesday" nil :count 0)
    ("wehn" "when" nil :count 0)
    ("whos" "who is" nil :count 0)
    ("wi" "with" nil :count 1)
    ("wiht" "with" nil :count 1)
    ("wnt" "won't" nil :count 0)
    ("wo" "without" nil :count 1)
    ("wont" "will not" nil :count 0)
    ("wouldnt" "would not" nil :count 0)
    ("wouldve" "would have" nil :count 0)
    ("wsnt" "wasn't" nil :count 0)
    ("wtdb" "What's the difference between" nil :count 0)
   ))

(define-abbrev-table 'org-mode-abbrev-table
  '(
    ("c2h2" "C_{2}H_{2}" nil :count 0)
    ("c2h4" "C_{2}H_{4}" nil :count 0)
    ("c2h6" "C_{2}H_{6}" nil :count 0)
    ("ch4" "CH_{4}" nil :count 0)
    ("co2" "CO_{2}" nil :count 0)
    ("fa" "FAIR" nil :count 0)
    ("fair" "FAIR" nil :count 19)
    ("h2o" "H_{2}O" nil :count 0)
    ("lblk" "" skel-org-block-elisp :count 0)
    ("legnht" "length" nil :count 1)
    ("legnth" "length" nil :count 1)
    ("legth" "length" nil :count 1)
    ("lenght" "length" nil :count 1)
    ("lenth" "length" nil :count 1)
    ("ma" "am" nil :count 6)
    ("n2" "N_{2}" nil :count 0)
    ("oabstract" "#+BEGIN_ABSTRACT

#+END_ABSTRACT
" nil :count 5)
    ("oarticle" "#+LATEX_CLASS: fu-org-article" nil :count 10)
    ("oauthor" "#+AUTHOR: Heikki Lehväslaiho" nil :count 7)
    ("obeamer" "#+startup: beamer
#+LaTeX_CLASS: beamer
#+BEAMER_THEME: metropolis
" nil :count 0)
    ("obibio" "" skel-org-block-bibl :count 1)
    ("obiblio" "" skel-org-block-bibl :count 0)
    ("ocall" "#+CALL:" nil :count 1)
    ("ocaption" "#+CAPTION: " nil :count 7)
    ("oconst" "#+CONSTANTS: " nil :count 0)
    ("odate" "#+DATE:" nil :count 6)
    ("ofinnish" "#+LaTeX_HEADER: \\usepackage[finnish]{babel}" nil :count 9)
    ("ohyph" "#+LaTeX_HEADER: \\usepackage[none]{hyphenat}" nil :count 11)
    ("oindent" "#+STARTUP: indent" nil :count 4)
    ("okanban" "#+BEGIN: kanban
#+END
" nil :count 5)
    ("olabel" "#+LABEL: fig:label" nil :count 6)
    ("olable" "#+LABEL: fig:label" nil :count 7)
    ("oname" "#+NAME:" nil :count 8)
    ("onotoc" "#+TOK: nil" nil :count 1)
    ("ont" "ontology" nil :count 5)
    ("oref" "/ref{fig:label}" nil :count 8)
    ("oscale" "#+ATTR_LaTeX: scale=0.75" nil :count 1)
    ("oshebang" "#+PROPERTY: :shebang \"#!/usr/bin/env perl\"" nil :count 1)
    ("osize" "#+ATTR_LaTeX: width=0.70\\textwidth" nil :count 1)
    ("otime" "
# Time-stamp: \" \"" nil :count 2)
    ("otitle" "#+TITLE:" nil :count 16)
    ("otname" "#+TBLNAME:" nil :count 6)
    ("otoc" "#+OPTIONS: toc:nil num:nil" nil :count 10)
    ("otufte" "#+LATEX_CLASS: tufte-handout" nil :count 10)
    ("pblk" "" skel-org-block-perl :count 0)
    ("ralias" "#+roam_alias:" nil :count 1)
    ("rblk" "" skel-org-block-r :count 0)
    ("rkey" "#+roam_key:" nil :count 0)
    ("rtags" "#+roam_tags:" nil :count 1)
    ("rtitle" "#+title:" nil :count 0)
    ("sblk" "" skel-org-block-source :count 0)
    ("sditaa" "" skel-org-block-ditaa :count 0)
    ("sdot" "" skel-org-block-dot :count 0)
    ("selisp" "" skel-org-block-elisp :count 0)
    ("sem" "semantic" nil :count 1)
    ("splant" "" skel-org-block-plantuml :count 0)
   ))
